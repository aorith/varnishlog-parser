package content

import (
	"github.com/aorith/varnishlog-parser/vsl"
	"github.com/aorith/varnishlog-parser/pkg/render"
)

templ TimestampsTab(txsSet vsl.TransactionSet) {
	<div id="tabTimestamps" class="tabcontent">
		<p>Generate charts to analyze latencies by parsing VSL timestamps.</p>
		<p>If you're focused on analyzing latencies, you can shorten the logs by filtering for the relevant tags. For example:</p>
		<pre>
			<code>
				varnishlog -g request -i Begin,Timestamp,Link,End
			</code>
		</pre>
		<p>You can also add <code>std.timestamp("my-label")</code> entries directly in your VCL to track the timing of specific VCL operations. </p>
		<br/>
		<form
			class="simple-form"
			hx-post="timestamps/"
			hx-target="#timestampResults"
			hx-swap="innerHTML settle:0.3s"
			hx-include="[name='logs']"
		>
			<fieldset>
				<legend>Timestamp value: </legend>
				<label>
					<input type="radio" name="timestampValue" value="last" checked/> Time since last timestamp
				</label>
				<label>
					<input type="radio" name="timestampValue" value="start"/> Time since start of work unit
				</label>
			</fieldset>
			<fieldset>
				<legend>Timestamp events: </legend>
				<div class="chkbox-grid">
					for _, label := range render.TimestampEventLabels {
						<label><input type="checkbox" name="events" value={ label } checked?={ eventIsChecked(label) }/> { label }</label>
					}
				</div>
				<br/>
				<label><input type="checkbox" name="other-events"/> All other events</label>
			</fieldset>
			<fieldset>
				<legend>Timeline graph: </legend>
				<label>
					<input type="checkbox" name="timeline"/> Include event timeline graph
				</label>
			</fieldset>
			<br/>
			<br/>
			<button class="btn loading">Render</button>
		</form>
		<br/>
		<div id="timestampResults"></div>
	</div>
}

templ RenderTimestampsTab(txsSet vsl.TransactionSet, f render.TimestampsForm) {
	<div class="fade-me-in">
		<br/>
		@render.PercentilesLineChart(txsSet, f)
		if f.Timeline {
			<br/>
			<br/>
			@render.TimelineChart(txsSet, f)
		}
		<br/>
	</div>
}

func eventIsChecked(label string) bool {
	var defaultTimestampEventLabels = []string{
		"Process",
		"Resp",
		"BerespBody",
	}

	for _, event := range defaultTimestampEventLabels {
		if event == label {
			return true
		}
	}
	return false
}
